//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EmailLibrary.AccountService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AccountWebSoap", Namespace="http://temple.edu/")]
    public partial class AccountWeb : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LogInOperationCompleted;
        
        private System.Threading.SendOrPostCallback SecurityQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback BanUnBanOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsWithFlaggedEmailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AccountWeb() {
            this.Url = global::EmailLibrary.Properties.Settings.Default.EmailLibrary_AccountService_AccountWeb;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LogInCompletedEventHandler LogInCompleted;
        
        /// <remarks/>
        public event SecurityQuestionsCompletedEventHandler SecurityQuestionsCompleted;
        
        /// <remarks/>
        public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;
        
        /// <remarks/>
        public event CreateAccountCompletedEventHandler CreateAccountCompleted;
        
        /// <remarks/>
        public event BanUnBanCompletedEventHandler BanUnBanCompleted;
        
        /// <remarks/>
        public event GetAccountsWithFlaggedEmailCompletedEventHandler GetAccountsWithFlaggedEmailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://temple.edu/LogIn", RequestNamespace="http://temple.edu/", ResponseNamespace="http://temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Account LogIn(string theLoginEmail, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] theLoginPass) {
            object[] results = this.Invoke("LogIn", new object[] {
                        theLoginEmail,
                        theLoginPass});
            return ((Account)(results[0]));
        }
        
        /// <remarks/>
        public void LogInAsync(string theLoginEmail, byte[] theLoginPass) {
            this.LogInAsync(theLoginEmail, theLoginPass, null);
        }
        
        /// <remarks/>
        public void LogInAsync(string theLoginEmail, byte[] theLoginPass, object userState) {
            if ((this.LogInOperationCompleted == null)) {
                this.LogInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogInOperationCompleted);
            }
            this.InvokeAsync("LogIn", new object[] {
                        theLoginEmail,
                        theLoginPass}, this.LogInOperationCompleted, userState);
        }
        
        private void OnLogInOperationCompleted(object arg) {
            if ((this.LogInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogInCompleted(this, new LogInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://temple.edu/SecurityQuestions", RequestNamespace="http://temple.edu/", ResponseNamespace="http://temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SecurityQuestions(Account theAccount) {
            object[] results = this.Invoke("SecurityQuestions", new object[] {
                        theAccount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SecurityQuestionsAsync(Account theAccount) {
            this.SecurityQuestionsAsync(theAccount, null);
        }
        
        /// <remarks/>
        public void SecurityQuestionsAsync(Account theAccount, object userState) {
            if ((this.SecurityQuestionsOperationCompleted == null)) {
                this.SecurityQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSecurityQuestionsOperationCompleted);
            }
            this.InvokeAsync("SecurityQuestions", new object[] {
                        theAccount}, this.SecurityQuestionsOperationCompleted, userState);
        }
        
        private void OnSecurityQuestionsOperationCompleted(object arg) {
            if ((this.SecurityQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SecurityQuestionsCompleted(this, new SecurityQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://temple.edu/UpdatePassword", RequestNamespace="http://temple.edu/", ResponseNamespace="http://temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePassword(Account theAccount) {
            object[] results = this.Invoke("UpdatePassword", new object[] {
                        theAccount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(Account theAccount) {
            this.UpdatePasswordAsync(theAccount, null);
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(Account theAccount, object userState) {
            if ((this.UpdatePasswordOperationCompleted == null)) {
                this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePassword", new object[] {
                        theAccount}, this.UpdatePasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePasswordOperationCompleted(object arg) {
            if ((this.UpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://temple.edu/CreateAccount", RequestNamespace="http://temple.edu/", ResponseNamespace="http://temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateAccount(Account theAccount) {
            object[] results = this.Invoke("CreateAccount", new object[] {
                        theAccount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAccountAsync(Account theAccount) {
            this.CreateAccountAsync(theAccount, null);
        }
        
        /// <remarks/>
        public void CreateAccountAsync(Account theAccount, object userState) {
            if ((this.CreateAccountOperationCompleted == null)) {
                this.CreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("CreateAccount", new object[] {
                        theAccount}, this.CreateAccountOperationCompleted, userState);
        }
        
        private void OnCreateAccountOperationCompleted(object arg) {
            if ((this.CreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAccountCompleted(this, new CreateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://temple.edu/BanUnBan", RequestNamespace="http://temple.edu/", ResponseNamespace="http://temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int BanUnBan(Account theAccount) {
            object[] results = this.Invoke("BanUnBan", new object[] {
                        theAccount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void BanUnBanAsync(Account theAccount) {
            this.BanUnBanAsync(theAccount, null);
        }
        
        /// <remarks/>
        public void BanUnBanAsync(Account theAccount, object userState) {
            if ((this.BanUnBanOperationCompleted == null)) {
                this.BanUnBanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBanUnBanOperationCompleted);
            }
            this.InvokeAsync("BanUnBan", new object[] {
                        theAccount}, this.BanUnBanOperationCompleted, userState);
        }
        
        private void OnBanUnBanOperationCompleted(object arg) {
            if ((this.BanUnBanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BanUnBanCompleted(this, new BanUnBanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://temple.edu/GetAccountsWithFlaggedEmail", RequestNamespace="http://temple.edu/", ResponseNamespace="http://temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAccountsWithFlaggedEmail() {
            object[] results = this.Invoke("GetAccountsWithFlaggedEmail", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsWithFlaggedEmailAsync() {
            this.GetAccountsWithFlaggedEmailAsync(null);
        }
        
        /// <remarks/>
        public void GetAccountsWithFlaggedEmailAsync(object userState) {
            if ((this.GetAccountsWithFlaggedEmailOperationCompleted == null)) {
                this.GetAccountsWithFlaggedEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsWithFlaggedEmailOperationCompleted);
            }
            this.InvokeAsync("GetAccountsWithFlaggedEmail", new object[0], this.GetAccountsWithFlaggedEmailOperationCompleted, userState);
        }
        
        private void OnGetAccountsWithFlaggedEmailOperationCompleted(object arg) {
            if ((this.GetAccountsWithFlaggedEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsWithFlaggedEmailCompleted(this, new GetAccountsWithFlaggedEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://temple.edu/")]
    public partial class Account {
        
        private int accountIdField;
        
        private string userNameField;
        
        private string userAddressField;
        
        private string phoneNumberField;
        
        private string createdEmailAddressField;
        
        private string contactEmailAddressField;
        
        private int avatarField;
        
        private byte[] accountPasswordField;
        
        private string activeField;
        
        private System.DateTime dateTimeStampField;
        
        private string accountRoleTypeField;
        
        private string securityQuestionCityField;
        
        private string securityQuestionPhoneField;
        
        private string securityQuestionSchoolField;
        
        /// <remarks/>
        public int AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserAddress {
            get {
                return this.userAddressField;
            }
            set {
                this.userAddressField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedEmailAddress {
            get {
                return this.createdEmailAddressField;
            }
            set {
                this.createdEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ContactEmailAddress {
            get {
                return this.contactEmailAddressField;
            }
            set {
                this.contactEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int Avatar {
            get {
                return this.avatarField;
            }
            set {
                this.avatarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] AccountPassword {
            get {
                return this.accountPasswordField;
            }
            set {
                this.accountPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeStamp {
            get {
                return this.dateTimeStampField;
            }
            set {
                this.dateTimeStampField = value;
            }
        }
        
        /// <remarks/>
        public string AccountRoleType {
            get {
                return this.accountRoleTypeField;
            }
            set {
                this.accountRoleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityQuestionCity {
            get {
                return this.securityQuestionCityField;
            }
            set {
                this.securityQuestionCityField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityQuestionPhone {
            get {
                return this.securityQuestionPhoneField;
            }
            set {
                this.securityQuestionPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityQuestionSchool {
            get {
                return this.securityQuestionSchoolField;
            }
            set {
                this.securityQuestionSchoolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LogInCompletedEventHandler(object sender, LogInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SecurityQuestionsCompletedEventHandler(object sender, SecurityQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecurityQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SecurityQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateAccountCompletedEventHandler(object sender, CreateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void BanUnBanCompletedEventHandler(object sender, BanUnBanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BanUnBanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BanUnBanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAccountsWithFlaggedEmailCompletedEventHandler(object sender, GetAccountsWithFlaggedEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsWithFlaggedEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsWithFlaggedEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591